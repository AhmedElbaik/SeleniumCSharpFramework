<?xml version="1.0" encoding="utf-8" standalone="no"?>
<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ImportGroup Condition=" '$(ExcludeRestorePackageImports)' != 'true' ">
    <Import Project="$(NuGetPackageRoot)system.text.json\8.0.0\buildTransitive\net6.0\System.Text.Json.targets" Condition="Exists('$(NuGetPackageRoot)system.text.json\8.0.0\buildTransitive\net6.0\System.Text.Json.targets')" />
    <Import Project="$(NuGetPackageRoot)microsoft.extensions.options\8.0.0\buildTransitive\net6.0\Microsoft.Extensions.Options.targets" Condition="Exists('$(NuGetPackageRoot)microsoft.extensions.options\8.0.0\buildTransitive\net6.0\Microsoft.Extensions.Options.targets')" />
    <Import Project="$(NuGetPackageRoot)microsoft.extensions.configuration.binder\8.0.0\buildTransitive\netstandard2.0\Microsoft.Extensions.Configuration.Binder.targets" Condition="Exists('$(NuGetPackageRoot)microsoft.extensions.configuration.binder\8.0.0\buildTransitive\netstandard2.0\Microsoft.Extensions.Configuration.Binder.targets')" />
    <Import Project="$(NuGetPackageRoot)microsoft.extensions.logging.abstractions\8.0.0\buildTransitive\net6.0\Microsoft.Extensions.Logging.Abstractions.targets" Condition="Exists('$(NuGetPackageRoot)microsoft.extensions.logging.abstractions\8.0.0\buildTransitive\net6.0\Microsoft.Extensions.Logging.Abstractions.targets')" />
    <Import Project="$(NuGetPackageRoot)microsoft.extensions.configuration.usersecrets\8.0.0\buildTransitive\net6.0\Microsoft.Extensions.Configuration.UserSecrets.targets" Condition="Exists('$(NuGetPackageRoot)microsoft.extensions.configuration.usersecrets\8.0.0\buildTransitive\net6.0\Microsoft.Extensions.Configuration.UserSecrets.targets')" />
    <Import Project="$(NuGetPackageRoot)xunit.dependencyinjection\9.7.0\buildTransitive\netstandard2.1\Xunit.DependencyInjection.targets" Condition="Exists('$(NuGetPackageRoot)xunit.dependencyinjection\9.7.0\buildTransitive\netstandard2.1\Xunit.DependencyInjection.targets')" />
    <Import Project="$(NuGetPackageRoot)xunit.core\2.9.3\build\xunit.core.targets" Condition="Exists('$(NuGetPackageRoot)xunit.core\2.9.3\build\xunit.core.targets')" />
    <Import Project="$(NuGetPackageRoot)reqnroll\2.2.1\build\Reqnroll.targets" Condition="Exists('$(NuGetPackageRoot)reqnroll\2.2.1\build\Reqnroll.targets')" />
    <Import Project="$(NuGetPackageRoot)reqnroll.tools.msbuild.generation\2.2.1\build\Reqnroll.Tools.MsBuild.Generation.targets" Condition="Exists('$(NuGetPackageRoot)reqnroll.tools.msbuild.generation\2.2.1\build\Reqnroll.Tools.MsBuild.Generation.targets')" />
    <Import Project="$(NuGetPackageRoot)reqnroll.xunit\2.2.1\build\Reqnroll.xUnit.targets" Condition="Exists('$(NuGetPackageRoot)reqnroll.xunit\2.2.1\build\Reqnroll.xUnit.targets')" />
    <Import Project="$(NuGetPackageRoot)xretry.reqnroll\1.0.0\build\xRetry.Reqnroll.targets" Condition="Exists('$(NuGetPackageRoot)xretry.reqnroll\1.0.0\build\xRetry.Reqnroll.targets')" />
    <Import Project="$(NuGetPackageRoot)entityframework\6.4.4\buildTransitive\netcoreapp3.0\EntityFramework.targets" Condition="Exists('$(NuGetPackageRoot)entityframework\6.4.4\buildTransitive\netcoreapp3.0\EntityFramework.targets')" />
    <Import Project="$(NuGetPackageRoot)sqlitepclraw.lib.e_sqlite3\2.1.10\buildTransitive\net8.0\SQLitePCLRaw.lib.e_sqlite3.targets" Condition="Exists('$(NuGetPackageRoot)sqlitepclraw.lib.e_sqlite3\2.1.10\buildTransitive\net8.0\SQLitePCLRaw.lib.e_sqlite3.targets')" />
    <Import Project="$(NuGetPackageRoot)selenium.webdriver\4.28.0\buildTransitive\Selenium.WebDriver.targets" Condition="Exists('$(NuGetPackageRoot)selenium.webdriver\4.28.0\buildTransitive\Selenium.WebDriver.targets')" />
    <Import Project="$(NuGetPackageRoot)reqnroll.specflowcompatibility\2.2.1\build\Reqnroll.SpecFlowCompatibility.targets" Condition="Exists('$(NuGetPackageRoot)reqnroll.specflowcompatibility\2.2.1\build\Reqnroll.SpecFlowCompatibility.targets')" />
    <Import Project="$(NuGetPackageRoot)reqnroll.autofac\2.2.1\build\Reqnroll.Autofac.targets" Condition="Exists('$(NuGetPackageRoot)reqnroll.autofac\2.2.1\build\Reqnroll.Autofac.targets')" />
    <Import Project="$(NuGetPackageRoot)microsoft.codecoverage\17.12.0\build\netstandard2.0\Microsoft.CodeCoverage.targets" Condition="Exists('$(NuGetPackageRoot)microsoft.codecoverage\17.12.0\build\netstandard2.0\Microsoft.CodeCoverage.targets')" />
    <Import Project="$(NuGetPackageRoot)microsoft.net.test.sdk\17.12.0\build\netcoreapp3.1\Microsoft.NET.Test.Sdk.targets" Condition="Exists('$(NuGetPackageRoot)microsoft.net.test.sdk\17.12.0\build\netcoreapp3.1\Microsoft.NET.Test.Sdk.targets')" />
  </ImportGroup>
</Project>